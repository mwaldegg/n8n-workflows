{
  "active": false,
  "connections": {
    "Globals": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "JSON formatting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON formatting": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "check_github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Add",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split the result": {
      "main": [
        [
          {
            "node": "Get file content from GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert files to JSON": {
      "main": [
        [
          {
            "node": "Check for skipped Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all files in given path": {
      "main": [
        [
          {
            "node": "Split the result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file content from GitHub": {
      "main": [
        [
          {
            "node": "Convert files to JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for skipped Credentials": {
      "main": [
        [],
        [
          {
            "node": "Restore n8n Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Workflow": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals_restore": {
      "main": [
        [
          {
            "node": "Get all files in given path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Update": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Add": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-17T20:16:42.739Z",
  "id": "OQNE5tNrQVVhjnEy",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup n8n Credentials to GItHub",
  "nodes": [
    {
      "parameters": {
        "content": "## Backup n8n Credentials to GitHub \n\n:warning: **WARNING :warning:\nCREDENTIALS ARE NOT ENCRYPTED** \n\nThis workflow will backup all Credentials of the User to GitHub on schedule\n\nThe files are saved into folders using `$N8N_HOST` (from Docker Env) for the directory path and `ID.json` for the filename.\n\n\nMWa 2025",
        "height": 417,
        "width": 365,
        "color": 4
      },
      "id": "a82275ee-7030-4ac4-990a-5c6a18e337d9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "mwaldegg"
            },
            {
              "name": "repo.name",
              "value": "n8n-backup"
            },
            {
              "name": "repo.path",
              "value": "={{$env.N8N_HOST}}/credentials/"
            }
          ]
        },
        "options": {}
      },
      "id": "e539da2a-a38b-48e6-9962-256dc7b101d8",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        780,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "npx n8n export:credentials --all --decrypted"
      },
      "id": "3bcc9c22-1cce-475a-9789-065da186f493",
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        960,
        1640
      ],
      "typeVersion": 1,
      "notesInFlow": true,
      "notes": "Export Credentials with CLI"
    },
    {
      "parameters": {
        "jsCode": "// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"
      },
      "id": "eda0fc23-7a46-4e46-9e3c-a7cd260e664a",
      "name": "JSON formatting",
      "type": "n8n-nodes-base.code",
      "position": [
        1140,
        1640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"unchanged\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"changed\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "1e18606e-5c34-4b86-aad3-82fa6754d27b",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1960,
        1620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "unchanged"
            },
            {
              "value2": "changed",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "f23517e2-776c-45dd-8aac-c740b81cd473",
      "name": "check_github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        2160,
        1600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d2272f5b-746e-421c-9b2d-f13976a6e48d",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2420,
        1840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9250dec4-3ef4-475f-a961-0b0600434696",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2420,
        1620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "22e6baaa-c457-41c9-ade2-df466bfb3f3a",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2420,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "f8e8230e-db02-4c4a-a925-ecbf43724f9a",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1780,
        1620
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "3471e8f4-1b8b-4da4-8ae5-07f19cbc239d",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        1560,
        1520
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "2aa949bd-d0fa-46b8-bb7d-4c47bf55e889",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "d78b80a0-3b63-438c-b252-a985a6cce2ef",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1340,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.repo.owner }}/{{ $json.repo.name }}/contents/{{ $json.repo.path }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "7301a15e-5ade-40fd-a96a-f43eef32fc0e",
      "name": "Get all files in given path",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1580,
        2180
      ],
      "typeVersion": 4.2,
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "path",
        "options": {}
      },
      "id": "6997114a-9f40-443e-8397-7c89b085000e",
      "name": "Split the result",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1800,
        2180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals_restore').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals_restore').item.json.repo.owner }}/{{ $('Globals_restore').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{ $('Get all files in given path').item.json.path }}",
        "additionalParameters": {}
      },
      "id": "a4e4ea84-586a-479b-a8f4-ecd47f943e76",
      "name": "Get file content from GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        2020,
        2180
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "441bebfa-1334-4a40-a4fc-7e95c76695a1",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "088d2b09-d332-480c-9f67-c2b4ab945094",
      "name": "Convert files to JSON",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2240,
        2180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "credential",
        "name": "={{ $json.data.name }}",
        "credentialTypeName": "={{ $json.data.type }}",
        "data": "={{ JSON.stringify($json.data.data) }}",
        "requestOptions": {}
      },
      "id": "1b5f5db3-9d70-4990-9549-726dec4a36cc",
      "name": "Restore n8n Credentials",
      "type": "n8n-nodes-base.n8n",
      "position": [
        2700,
        2200
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "0hY6siEzlphSiVR9",
          "name": "n8n account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "ad031296-4ac0-4087-bc35-7975a2cc25e6",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.data }}",
              "rightValue": ""
            },
            {
              "id": "ca912a57-6a4b-4b9a-be0e-37b69d3e4917",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.data.name }}",
              "rightValue": "n8n account"
            }
          ]
        },
        "options": {}
      },
      "id": "dc309925-da61-45f2-a5b9-a768a7602eae",
      "name": "Check for skipped Credentials",
      "type": "n8n-nodes-base.if",
      "position": [
        2460,
        2180
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "## Restore from GitHub \nThis workflow will restore all instance credentials from GitHub backups.\n\n\n\n",
        "height": 120,
        "width": 320,
        "color": 3
      },
      "id": "5b732c36-df33-473f-92af-a481bcd0bd82",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1300,
        2360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a31c2595-09cd-4350-9b50-e18039fc1a31",
      "name": "Test Workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        440,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-connor` and your repository was called `n8n-backups` and you wanted the credentials to go into a `n8n.example.net/credentials` folder you would set:\n\n- repo.owner - john-connor\n- repo.name - n8n-backup\n- repo.path - {{$env.N8N_HOST}}workflows/",
        "height": 420,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        1120
      ],
      "id": "c7dd8623-6139-4d49-99b4-93826256b5cf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "mwaldegg"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "={{$env.N8N_HOST}}/credentials/"
            }
          ]
        },
        "options": {}
      },
      "id": "4f2f227d-88c3-4d26-a813-a6f7c48b45cb",
      "name": "Globals_restore",
      "type": "n8n-nodes-base.set",
      "position": [
        1360,
        2180
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 1
            }
          ]
        }
      },
      "id": "69ec74e7-8aea-42f9-8cfd-dfe5ec0732d6",
      "name": "Schedule",
      "type": "n8n-nodes-base.cron",
      "position": [
        440,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Restore Part\n**Activate and run manually and think before you click** :D",
        "height": 400,
        "width": 1680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1300,
        2080
      ],
      "id": "190a0d99-8ed9-4cf1-9e03-cf4080e3e192",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$json[\"github_status\"]}}: n8n backup {{$node[\"OneAtATime\"].json[\"id\"]}}"
      },
      "id": "9eb90c68-1008-4dd1-8306-88aa22628ae6",
      "name": "GitHub Update",
      "type": "n8n-nodes-base.github",
      "position": [
        2600,
        1620
      ],
      "typeVersion": 1,
      "webhookId": "826efb2a-7c68-415a-9114-efe2aa379756",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$json[\"github_status\"]}}: n8n backup {{$node[\"OneAtATime\"].json[\"id\"]}}"
      },
      "id": "33646c45-4dd0-4aa6-a4ca-f4e10fe73bdf",
      "name": "GitHub Add",
      "type": "n8n-nodes-base.github",
      "position": [
        2600,
        1840
      ],
      "typeVersion": 1,
      "webhookId": "688c3a18-38df-4b07-80cc-7a0456f57243",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "content": ":warning: WARNING: When exporting workflows and credentials, n8n also exports their IDs. If you have workflows and credentials with the same IDs in your existing database, they will be overwritten. To avoid this, delete or change the IDs before importing.",
        "width": 620
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1460,
        1120
      ],
      "id": "fe094e6a-1677-444a-8d7d-6341e958fabd",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-18T07:32:15.507Z",
      "updatedAt": "2025-04-18T07:32:15.507Z",
      "id": "HRxKEvav7fZAeLNd",
      "name": "backup"
    },
    {
      "createdAt": "2025-04-18T08:12:43.340Z",
      "updatedAt": "2025-04-18T08:12:43.340Z",
      "id": "JEbqNIF4CIyavejD",
      "name": "share"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-22T20:43:39.000Z",
  "versionId": "c02be3c8-85fe-4acb-b254-335b1efebfcc"
}