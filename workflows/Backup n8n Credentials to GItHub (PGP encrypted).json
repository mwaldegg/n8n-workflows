{
  "active": true,
  "connections": {
    "Globals": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get all files in given path1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "JSON formatting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON formatting": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "n8n_file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "PGP1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Workflow": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Update": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Add": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PGP": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "PGP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "changed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PGP1": {
      "main": [
        [
          {
            "node": "GitHub Add",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PGP2": {
      "main": [
        [
          {
            "node": "GitHub Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "changed": {
      "main": [
        [
          {
            "node": "PGP2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all files in given path1": {
      "main": [
        [
          {
            "node": "github_file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n_file": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_file": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "removed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "removed": {
      "main": [
        [
          {
            "node": "GitHub delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-18T19:05:28.364Z",
  "id": "83n0u2klGTMAAWWv",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup n8n Credentials to GItHub (PGP encrypted)",
  "nodes": [
    {
      "parameters": {
        "content": "## Backup n8n Credentials (encrypted with pgp) to GitHub \n\n:warning: **WARNING :warning:\nCREDENTIALS ARE ENCRYPTET\nby a PGP key you have to create yourself\n\nThis workflow will backup all Credentials of the User to GitHub on schedule\n\nThe files are saved into folders using `$N8N_HOST` (from Docker Env) for the directory path and `ID.json` for the filename.\n\n\nMWa 2025",
        "height": 477,
        "width": 365,
        "color": 4
      },
      "id": "1381e11c-7ff2-4358-9e2e-3bd23598efb9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "mwaldegg"
            },
            {
              "name": "repo.name",
              "value": "n8n-backup"
            },
            {
              "name": "repo.path",
              "value": "={{$env.N8N_HOST}}/credentials_enc/"
            }
          ]
        },
        "options": {}
      },
      "id": "904c516d-99cd-4c3d-8694-c0429d66ea35",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        780,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "npx n8n export:credentials --all --decrypted"
      },
      "id": "f89790c4-6045-48e4-8d97-4ef13f312d28",
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        1020,
        1640
      ],
      "typeVersion": 1,
      "notesInFlow": true,
      "notes": "Export Credentials with CLI"
    },
    {
      "parameters": {
        "jsCode": "// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"
      },
      "id": "99f10247-0617-404d-bbd0-5a440414b49d",
      "name": "JSON formatting",
      "type": "n8n-nodes-base.code",
      "position": [
        1260,
        1640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "de00a15f-50ab-4b3f-a5c9-188faa37cf92",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3460,
        1960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "98ac0dce-4399-4348-b2c5-5ac8a046cdc3",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3460,
        1520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }} - {{ $('JSON formatting').item.json.name }}.json.gpg",
        "additionalParameters": {}
      },
      "id": "8d08bfd9-b92f-4065-90f9-9ec94c5319ca",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        2040,
        1520
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "webhookId": "f4eabb27-9e7b-4964-9c9a-f3dbd505904f",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "0fa745af-3399-4b6a-bf3a-3694cd74f4cd",
      "name": "Test Workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        440,
        1560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Setup\n* Install Community Node: [n8n-nodes-pgp](https://www.npmjs.com/package/n8n-nodes-pgp)\n* Add your PGP Key (private and public) to credentials\n* Setup a [n8n API key](https://docs.n8n.io/api/authentication/) and add it to credentials\n* Setup [Github API access token](https://docs.n8n.io/integrations/builtin/credentials/github/)\n* Open `Globals` node and update the values below 👇\n\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-connor` and your repository was called `n8n-backups` and you wanted the credentials to go into a `n8n.example.net/credentials` folder you would set:\n\n- repo.owner - john-connor\n- repo.name - n8n-backup\n- repo.path - {{$env.N8N_HOST}}workflows/",
        "height": 480,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        1120
      ],
      "id": "45a96220-9b80-4ab5-8103-81f8934db43f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 1
            }
          ]
        }
      },
      "id": "207afac6-e1cd-4718-b0ef-2b1053c6d983",
      "name": "Schedule",
      "type": "n8n-nodes-base.cron",
      "position": [
        440,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }} - {{ $('JSON formatting').item.json.name }}.json.gpg",
        "fileContent": "={{ $json.encrypted }}",
        "commitMessage": "=changed: n8n credential {{ $('JSON formatting').item.json.id }}"
      },
      "id": "84f525f6-2cc8-4c47-8329-a1e78ed5c1de",
      "name": "GitHub Update",
      "type": "n8n-nodes-base.github",
      "position": [
        3880,
        1760
      ],
      "typeVersion": 1,
      "webhookId": "52dc5a71-9781-4789-9a9e-9ae763492a9f",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('JSON formatting').item.json.id }} - {{ $('JSON formatting').item.json.name }}.json.gpg",
        "fileContent": "={{ $json.encrypted }}",
        "commitMessage": "=new: n8n credential {{ $('JSON formatting').item.json.id }}"
      },
      "id": "d97069ad-eca8-4e0b-a366-e66285e840dd",
      "name": "GitHub Add",
      "type": "n8n-nodes-base.github",
      "position": [
        3880,
        1960
      ],
      "typeVersion": 1,
      "webhookId": "44bb2b8f-6bd8-4795-b7a0-52dd37c2ba2e",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1760,
        1640
      ],
      "id": "8c78f40b-d1da-453d-ac36-ed1451d8e9ef",
      "name": "Loop Over Items",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "decrypt",
        "type": "string",
        "text": "={{ $json.data }}"
      },
      "type": "n8n-nodes-pgp.PGP",
      "typeVersion": 1,
      "position": [
        2460,
        1520
      ],
      "id": "df440226-9f1b-41b8-9a9a-4755c3915e61",
      "name": "PGP",
      "alwaysOutputData": true,
      "credentials": {
        "pgpKey": {
          "id": "FDGny40wZtf3nUVH",
          "name": "PGP Private"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2240,
        1520
      ],
      "id": "c5972e80-4c75-445a-aec0-85c9b052b229",
      "name": "Extract from File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "634c7145-23ba-4362-8a1f-5d3ac19dd7ac",
                    "leftValue": "={{ $json.n8n_stringify }}",
                    "rightValue": "={{ $json.github_stringify }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "same"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0bf38795-b8fb-46cd-9624-be9124473343",
                    "leftValue": "={{ $json.github_stringify }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "new"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c58497bd-d929-43e9-83ff-5ab72fc49203",
                    "leftValue": "={{ $json.n8n_stringify }}",
                    "rightValue": "={{ $json.github_stringify }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "changed"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3140,
        1660
      ],
      "id": "d4c97f85-a8ad-4580-a95c-abeffe60235c",
      "name": "Switch"
    },
    {
      "parameters": {
        "type": "string",
        "text": "={{ $json.n8n_stringify }}"
      },
      "type": "n8n-nodes-pgp.PGP",
      "typeVersion": 1,
      "position": [
        3680,
        1960
      ],
      "id": "1576727d-9b92-488d-b2ae-cb84a28ad212",
      "name": "PGP1",
      "credentials": {
        "pgpKey": {
          "id": "KkXyeb9IUbKTiXN2",
          "name": "PGP Public"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4069d361-efe9-4e66-9c82-b1d95fcd06a9",
              "name": "n8n_stringify",
              "value": "={{JSON.stringify($json)}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2680,
        1780
      ],
      "id": "ce8d81ec-52af-4c3d-b8a2-c0038536aa68",
      "name": "Edit Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e13ff179-f124-4f7d-a1e3-743e209dbaa4",
              "name": "github_stringify",
              "value": "={{ $json.decrypted }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2680,
        1520
      ],
      "id": "7feaa8e9-ed7f-420c-9ba9-3ecfd50dee8a",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2920,
        1660
      ],
      "id": "6f56a82a-22a8-49b9-94d5-fd80332e25ce",
      "name": "Merge"
    },
    {
      "parameters": {
        "type": "string",
        "text": "={{ $json.n8n_stringify }}"
      },
      "type": "n8n-nodes-pgp.PGP",
      "typeVersion": 1,
      "position": [
        3680,
        1760
      ],
      "id": "c3dd9767-c34a-46fa-841a-71af255c9fd2",
      "name": "PGP2",
      "credentials": {
        "pgpKey": {
          "id": "KkXyeb9IUbKTiXN2",
          "name": "PGP Public"
        }
      }
    },
    {
      "parameters": {},
      "id": "2690c4d3-ba8f-4a44-925d-a400f5362571",
      "name": "changed",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3460,
        1760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "82d71001-d0f6-4073-8927-ef6a2a919ef7",
              "leftValue": "={{ $json.data }}",
              "rightValue": " PGP PRIVATE KEY",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1500,
        1640
      ],
      "id": "1883bb2d-214a-4e92-a919-26d713c91324",
      "name": "Filter"
    },
    {
      "parameters": {
        "content": "## Delete old credentials from backup\n**Delete credentials that don't exist anymore in n8n\n\nActivate Github Node to use this part\n",
        "height": 420,
        "width": 2340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        2200
      ],
      "id": "eea5674c-3a4f-46f0-9808-f916c5c07d74",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}/contents/{{ $('Globals').item.json.repo.path }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "b8f5a379-f046-4f4d-8ee4-04e53319fd9a",
      "name": "Get all files in given path1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2120,
        2440
      ],
      "typeVersion": 4.2,
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "n8n_file",
              "field2": "github_file"
            }
          ]
        },
        "joinMode": "keepEverything",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2820,
        2360
      ],
      "id": "477da63a-fda8-448c-9c1f-e0c7a0c89691",
      "name": "Merge2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7481be18-e690-4164-8407-5665964fe118",
              "name": "n8n_file",
              "value": "={{ $json.id }} - {{ $json.name }}.json.gpg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2340,
        2280
      ],
      "id": "c3df5c29-9289-4f15-ac1e-4d564af1d7c0",
      "name": "n8n_file"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3dd819d4-1217-49bf-acd4-8410f54db31b",
              "name": "github_file",
              "value": "={{ $json.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2340,
        2440
      ],
      "id": "92554598-2813-46e1-b671-707c053a7c56",
      "name": "github_file"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c73b07cc-6fa3-49db-bd1d-385d610fd560",
              "leftValue": "={{ $json.n8n_file }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "01b9f972-7e66-42ab-bd13-5b93ca32250a",
              "leftValue": "={{ $json.github_file }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3140,
        2360
      ],
      "id": "1fda07a8-f449-4fd7-a37f-30f92ec45144",
      "name": "If",
      "notesInFlow": true,
      "notes": "IF only on github"
    },
    {
      "parameters": {},
      "id": "58ad33e3-f165-4f59-b29a-9dae1dc08ee8",
      "name": "removed",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3420,
        2340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "delete",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $json.github_file }}",
        "commitMessage": "=removed: n8n credential {{ $json.github_file }}"
      },
      "id": "c04793a4-f2f5-4fc9-be96-82092465757a",
      "name": "GitHub delete",
      "type": "n8n-nodes-base.github",
      "position": [
        3880,
        2340
      ],
      "typeVersion": 1,
      "webhookId": "625ff10b-1643-4701-9290-f503a9a9e0b2",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "content": "### Changlog\n\n- 2025-04-17 Initial Version (MWa) \n- 2025-04-21 Added Part to delete crendetials which are deleted from n8n (you can still restore them on GitHub) (MWa)",
        "height": 480,
        "width": 380,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1460,
        1120
      ],
      "id": "a3e8068b-8b18-4716-8e50-212a49e1d3c0",
      "name": "Sticky Note6"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-18T07:32:15.507Z",
      "updatedAt": "2025-04-18T07:32:15.507Z",
      "id": "HRxKEvav7fZAeLNd",
      "name": "backup"
    },
    {
      "createdAt": "2025-04-18T08:12:43.340Z",
      "updatedAt": "2025-04-18T08:12:43.340Z",
      "id": "JEbqNIF4CIyavejD",
      "name": "share"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-22T20:24:25.000Z",
  "versionId": "c50bf664-36cd-4eb1-803d-76916dc953be"
}