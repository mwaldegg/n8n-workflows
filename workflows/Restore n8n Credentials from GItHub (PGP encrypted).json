{
  "active": false,
  "connections": {
    "Get all files in given path": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file content from GitHub": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for skipped Credentials1": {
      "main": [
        [],
        [
          {
            "node": "Form1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "PGP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PGP": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Check for skipped Credentials1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Form",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Form": {
      "main": [
        [
          {
            "node": "Get file content from GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Form1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Restore n8n Credentials",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Form3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Restore n8n Credentials": {
      "main": [
        [
          {
            "node": "Form2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get all files in given path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-18T19:15:02.575Z",
  "id": "DAAUTlCbiQ9KTshG",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Restore n8n Credentials from GItHub (PGP encrypted)",
  "nodes": [
    {
      "parameters": {
        "content": "## Restore n8n Credentials from GitHub  (PGP encrypted) \n\nThis workflow restores or imports credentials from GitHub that were previously generated by my workflow.**Backup n8n Credentials to GitHub (PGP encrypted)**.\n\nThe files are loaded from the specified repository and path (see setup).\n\n**Back it upâ€¦ or pack it up.**\n\nMWa 2025",
        "height": 437,
        "width": 365,
        "color": 4
      },
      "id": "6a9d043e-6097-4917-ba3e-9dc92085ed7b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        700,
        1140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.repo.owner }}/{{ $json.repo.name }}/contents/{{ $json.repo.path }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "0cfbeaf0-c2ea-46d9-9387-ecebd9881452",
      "name": "Get all files in given path",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        920,
        1720
      ],
      "typeVersion": 4.2,
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $('Globals').item.json.repo.owner }}/{{ $('Globals').item.json.repo.name }}",
          "mode": "url"
        },
        "filePath": "={{ $json.Credential }}",
        "additionalParameters": {}
      },
      "id": "454eed2e-60dd-4cc6-a512-f2b99dc88702",
      "name": "Get file content from GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        1500,
        1720
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "eb87d373-e7a8-48b9-ba69-28dfc5481058",
      "credentials": {
        "githubApi": {
          "id": "Xbn43nvsm3Cw7DC7",
          "name": "GitHub (n8n-backup)"
        }
      }
    },
    {
      "parameters": {
        "content": "## Restore from GitHub \nThis workflow will restore/import given credentials from GitHub backups.\n\n\n\n",
        "height": 120,
        "width": 320,
        "color": 3
      },
      "id": "78c69955-5de7-4327-b5d1-76ed01c381a4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        700,
        2160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Setup\n* Install Community Node: [n8n-nodes-pgp](https://www.npmjs.com/package/n8n-nodes-pgp)\n* Add your PGP Key (public) to credentials\n* Add your [n8n API key](https://docs.n8n.io/api/authentication/) \n* Add your [Github API access token](https://docs.n8n.io/integrations/builtin/credentials/github/)\n* Open `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-connor` and your repository was called `n8n-backups` and you stored credentials to /credentials` folder you would set:\n\n- repo.owner - john-connor\n- repo.name - n8n-backup\n- repo.path - credentials/",
        "height": 440,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1080,
        1140
      ],
      "id": "e0e3541c-0811-40fc-9c6c-6c5b0949f9be",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Restore Part\n**Enter Credential ID to restore from Github to n8n",
        "height": 660,
        "width": 1840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        1620
      ],
      "id": "ae4a3103-8dd7-46cd-9d3d-ff3af0e5b00b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "formTitle": "Credential Restore",
        "formDescription": "Restore credential from Github...",
        "responseMode": "lastNode",
        "options": {
          "buttonLabel": "start..."
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        460,
        1720
      ],
      "id": "9188d76f-7c3a-4863-bbed-028a96f02c30",
      "name": "On form submission",
      "webhookId": "fb4469e0-6974-4473-838b-fe80df6736c2"
    },
    {
      "parameters": {
        "resource": "credential",
        "name": "={{ $('Check for skipped Credentials1').item.json.data.name }}",
        "credentialTypeName": "={{ $('Check for skipped Credentials1').item.json.data.type }}",
        "data": "={{ JSON.stringify($('Check for skipped Credentials1').item.json.data.data) }}",
        "requestOptions": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "bef7ba90-4c99-41b3-8268-4fc16eb1ca61",
      "name": "Restore n8n Credentials",
      "type": "n8n-nodes-base.n8n",
      "position": [
        2100,
        1920
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "0hY6siEzlphSiVR9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad031296-4ac0-4087-bc35-7975a2cc25e6",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.data }}",
              "rightValue": ""
            },
            {
              "id": "ca912a57-6a4b-4b9a-be0e-37b69d3e4917",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.data.name }}",
              "rightValue": "n8n account"
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "f8bcae44-6d44-4110-8002-c79d31bd4946",
      "name": "Check for skipped Credentials1",
      "type": "n8n-nodes-base.if",
      "position": [
        1420,
        1920
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "decrypt",
        "type": "string",
        "text": "={{ $json.data }}"
      },
      "type": "n8n-nodes-pgp.PGP",
      "typeVersion": 1,
      "position": [
        780,
        1920
      ],
      "id": "a2c74752-c358-488b-923b-4ce3fdf22b1f",
      "name": "PGP",
      "alwaysOutputData": true,
      "credentials": {
        "pgpKey": {
          "id": "FDGny40wZtf3nUVH",
          "name": "PGP Private"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1700,
        1720
      ],
      "id": "de5f4c44-4bec-42b3-b01a-511f76d548c5",
      "name": "Extract from File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "decrypted",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1000,
        1920
      ],
      "id": "32fbddcc-833f-478f-a867-5018f794a32b",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1200,
        1920
      ],
      "id": "893afe8c-74a9-4bf0-b075-3b3178ae7ada",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "content": "### Usage\n\n- Start the workflow using **\"Test Workflow\"**.  \n- Follow the form-pages\n- Alternatively, you can enter **\"ALL\"** to restore all credentials from the repository â€“ **use with caution**, as this can overwrite existing credentials with the same name.  \n- Enjoy your restored credentials.",
        "height": 440,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1480,
        1140
      ],
      "id": "7ed5e23f-7d57-4b6f-83d8-2d9bd3fbd664",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "path"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1100,
        1720
      ],
      "id": "9610ae1e-dbdf-472c-9acc-555f664afcf6",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "defineForm": "json",
        "jsonOutput": "={{ \n[\n   {\n\t\t\"fieldLabel\": \"Credential\",\n\t\t\"fieldType\": \"dropdown\",\n\t\t\"fieldOptions\": {\n\t\t\t\"values\": $json.path.map(name => ({ option: name }))\n\t\t},\n\t\t\"requiredField\": true\n\t},\n]\n}}",
        "options": {
          "buttonLabel": "select"
        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        1300,
        1720
      ],
      "id": "619a4c80-88b5-49b3-b3e5-a611a8611f1b",
      "name": "Form",
      "webhookId": "6899851f-e796-40ef-9897-aa002063b672"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "restore? (enter ID again)",
              "placeholder": "ID",
              "requiredField": true
            }
          ]
        },
        "options": {
          "formDescription": "=Credentials will be restored/imported:\n\nID: {{ $json.data.id }}\nType: {{ $json.data.type }}\nName: {{ $json.data.name }}\nLast Update: {{ $json.data.updatedAt }}",
          "buttonLabel": "restore"
        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        1700,
        1940
      ],
      "id": "0add733d-af58-406c-b78c-40a7ddf55e32",
      "name": "Form1",
      "webhookId": "82f39136-7477-4429-b43f-c44d34f5fdbd"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d6e0d3bb-65fe-4de2-825a-5726d941ec5b",
              "leftValue": "={{ $('Extract from File1').item.json.data.id }}",
              "rightValue": "={{ $json['restore? (enter ID again)'] }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1900,
        1940
      ],
      "id": "40089396-2d53-41d5-a8b8-c4d70da2fb55",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "completion",
        "completionTitle": "Restore canceled",
        "completionMessage": "Entered ID did not match original ID.",
        "options": {}
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        2320,
        2120
      ],
      "id": "49f39050-6427-4c01-90b6-39a265e9cee8",
      "name": "Form3",
      "webhookId": "93c9dba7-86e0-4fcc-96f1-eb0119792742"
    },
    {
      "parameters": {
        "operation": "completion",
        "completionTitle": "Import finished",
        "completionMessage": "=successfully imported credentials:\n\nID: {{ $json.id }}\nType: {{ $json.type }}\nName: {{ $json.name }}",
        "options": {}
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        2320,
        1920
      ],
      "id": "b67384c6-dc1a-4a50-a4b4-d07d0954c6a1",
      "name": "Form2",
      "webhookId": "03a78f4d-e207-4cb6-8dcd-033c66dbaf39",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "### Changlog\n\n- 2025-04-17 Initial Version (MWa) \n- 2025-04-21 Added filter to skip n8n (MWa)  Account\n- 2025-04-22 Added dynamic forms to restore",
        "height": 440,
        "width": 380,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1880,
        1140
      ],
      "id": "0edd1249-b8fa-4cf7-9075-c76a73d71940",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "mwaldegg"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "={{$env.N8N_HOST}}/credentials_enc/"
            }
          ]
        },
        "options": {}
      },
      "id": "29bd1dde-7e85-4940-baf7-164573d40d69",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        740,
        1720
      ],
      "typeVersion": 3.4
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-04-18T07:32:15.507Z",
      "updatedAt": "2025-04-18T07:32:15.507Z",
      "id": "HRxKEvav7fZAeLNd",
      "name": "backup"
    },
    {
      "createdAt": "2025-04-18T08:12:43.340Z",
      "updatedAt": "2025-04-18T08:12:43.340Z",
      "id": "JEbqNIF4CIyavejD",
      "name": "share"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-22T20:29:28.000Z",
  "versionId": "47523d85-f56c-4809-bac3-ed022eadcf21"
}